<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-18T19:37:34 IST" name="Submit Order Test" finished-at="2023-10-18T19:38:26 IST" duration-ms="51872">
    <groups>
      <group name="groupTest">
        <method signature="ValidationTest.validationTest()[pri:0, instance:CodeClouds.PracticeFrameWork.ValidationTest@46d59067]" name="validationTest" class="CodeClouds.PracticeFrameWork.ValidationTest"/>
      </group> <!-- groupTest -->
    </groups>
    <test started-at="2023-10-18T19:37:34 IST" name="Test" finished-at="2023-10-18T19:37:48 IST" duration-ms="13529">
      <class name="CodeClouds.PracticeFrameWork.ValidationTest">
        <test-method is-config="true" signature="gotoLandingPage()[pri:0, instance:CodeClouds.PracticeFrameWork.ValidationTest@46d59067]" started-at="2023-10-18T19:37:34 IST" name="gotoLandingPage" finished-at="2023-10-18T19:37:44 IST" duration-ms="10175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoLandingPage -->
        <test-method signature="validationTest()[pri:0, instance:CodeClouds.PracticeFrameWork.ValidationTest@46d59067]" started-at="2023-10-18T19:37:44 IST" name="validationTest" finished-at="2023-10-18T19:37:46 IST" duration-ms="1347" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password1.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password1.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at CodeClouds.PracticeFrameWork.ValidationTest.validationTest(ValidationTest.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationTest -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:CodeClouds.PracticeFrameWork.ValidationTest@46d59067]" started-at="2023-10-18T19:37:47 IST" name="closeBrowser" finished-at="2023-10-18T19:37:48 IST" duration-ms="749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- CodeClouds.PracticeFrameWork.ValidationTest -->
    </test> <!-- Test -->
    <test started-at="2023-10-18T19:37:34 IST" name="Error validation test" finished-at="2023-10-18T19:38:26 IST" duration-ms="51872">
      <class name="CodeClouds.PracticeFrameWork.OrderPlaced">
        <test-method is-config="true" signature="gotoLandingPage()[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:37:35 IST" name="gotoLandingPage" finished-at="2023-10-18T19:37:44 IST" duration-ms="9233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoLandingPage -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:37:44 IST" name="submitOrder" data-provider="dataprovider" finished-at="2023-10-18T19:37:57 IST" duration-ms="12386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=123456#Aa, product=ZARA COAT 3, email=sam94339@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:37:57 IST" name="closeBrowser" finished-at="2023-10-18T19:37:57 IST" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="gotoLandingPage()[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:37:57 IST" name="gotoLandingPage" finished-at="2023-10-18T19:38:02 IST" duration-ms="4594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoLandingPage -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:38:02 IST" name="submitOrder" data-provider="dataprovider" finished-at="2023-10-18T19:38:12 IST" duration-ms="10787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=123456@Aa, product=ADIDAS ORIGINAL, email=soumyadeep.ghosh@yopmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:38:12 IST" name="closeBrowser" finished-at="2023-10-18T19:38:13 IST" duration-ms="333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="gotoLandingPage()[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:38:13 IST" name="gotoLandingPage" finished-at="2023-10-18T19:38:17 IST" duration-ms="4593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoLandingPage -->
        <test-method signature="cartVerify(java.util.HashMap)[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:38:17 IST" name="cartVerify" data-provider="dataprovider" finished-at="2023-10-18T19:38:19 IST" depends-on-methods="CodeClouds.PracticeFrameWork.OrderPlaced.submitOrder" duration-ms="1604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=123456#Aa, product=ZARA COAT 3, email=sam94339@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartVerify -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:38:19 IST" name="closeBrowser" finished-at="2023-10-18T19:38:19 IST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="gotoLandingPage()[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:38:19 IST" name="gotoLandingPage" finished-at="2023-10-18T19:38:24 IST" duration-ms="4784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoLandingPage -->
        <test-method signature="cartVerify(java.util.HashMap)[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:38:24 IST" name="cartVerify" data-provider="dataprovider" finished-at="2023-10-18T19:38:26 IST" depends-on-methods="CodeClouds.PracticeFrameWork.OrderPlaced.submitOrder" duration-ms="1434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=123456@Aa, product=ADIDAS ORIGINAL, email=soumyadeep.ghosh@yopmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartVerify -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:CodeClouds.PracticeFrameWork.OrderPlaced@53f3bdbd]" started-at="2023-10-18T19:38:26 IST" name="closeBrowser" finished-at="2023-10-18T19:38:26 IST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- CodeClouds.PracticeFrameWork.OrderPlaced -->
    </test> <!-- Error validation test -->
  </suite> <!-- Submit Order Test -->
</testng-results>
